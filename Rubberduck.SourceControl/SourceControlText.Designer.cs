//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.SourceControl {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SourceControlText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SourceControlText() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.SourceControl.SourceControlText", typeof(SourceControlText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branch deletion failed. ähnelt.
        /// </summary>
        internal static string GitBranchDeleteFailed {
            get {
                return ResourceManager.GetString("GitBranchDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checkout failed. ähnelt.
        /// </summary>
        internal static string GitCheckoutFailed {
            get {
                return ResourceManager.GetString("GitCheckoutFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit failed. ähnelt.
        /// </summary>
        internal static string GitCommitFailed {
            get {
                return ResourceManager.GetString("GitCommitFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch failed. ähnelt.
        /// </summary>
        internal static string GitFetchFailed {
            get {
                return ResourceManager.GetString("GitFetchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to stage file. ähnelt.
        /// </summary>
        internal static string GitFileStageFailed {
            get {
                return ResourceManager.GetString("GitFileStageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to stage file &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string GitFileStageFailedMsg {
            get {
                return ResourceManager.GetString("GitFileStageFailedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branch creation failed. ähnelt.
        /// </summary>
        internal static string GitNewBranchFailed {
            get {
                return ResourceManager.GetString("GitNewBranchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to perform initial commit. ähnelt.
        /// </summary>
        internal static string GitNoInitialCommit {
            get {
                return ResourceManager.GetString("GitNoInitialCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to initialize repository. ähnelt.
        /// </summary>
        internal static string GitNotInit {
            get {
                return ResourceManager.GetString("GitNotInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Publish failed. ähnelt.
        /// </summary>
        internal static string GitPublishFailed {
            get {
                return ResourceManager.GetString("GitPublishFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pull failed. ähnelt.
        /// </summary>
        internal static string GitPullFailed {
            get {
                return ResourceManager.GetString("GitPullFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Push failed. ähnelt.
        /// </summary>
        internal static string GitPushFailed {
            get {
                return ResourceManager.GetString("GitPushFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to remove file &apos;{0}&apos; from staging area. ähnelt.
        /// </summary>
        internal static string GitRemoveFileStaging {
            get {
                return ResourceManager.GetString("GitRemoveFileStaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to clone remote repository. ähnelt.
        /// </summary>
        internal static string GitRepoNotCloned {
            get {
                return ResourceManager.GetString("GitRepoNotCloned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repository not found. ähnelt.
        /// </summary>
        internal static string GitRepoNotFound {
            get {
                return ResourceManager.GetString("GitRepoNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to retrieve repository status. ähnelt.
        /// </summary>
        internal static string GitRepoStatusFailed {
            get {
                return ResourceManager.GetString("GitRepoStatusFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert resulted in conflicts. Revert failed. ähnelt.
        /// </summary>
        internal static string GitRevertConflict {
            get {
                return ResourceManager.GetString("GitRevertConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revert failed. ähnelt.
        /// </summary>
        internal static string GitRevertFailed {
            get {
                return ResourceManager.GetString("GitRevertFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undo failed. ähnelt.
        /// </summary>
        internal static string GitUndoFailed {
            get {
                return ResourceManager.GetString("GitUndoFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unpublish failed. ähnelt.
        /// </summary>
        internal static string GitUnpublishFailed {
            get {
                return ResourceManager.GetString("GitUnpublishFailed", resourceCulture);
            }
        }
    }
}
