<TabItem x:Class="Rubberduck.UI.SourceControl.BranchesView"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:sourceControl="clr-namespace:Rubberduck.UI.SourceControl"
         mc:Ignorable="d"
         Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Branches}"
         d:DesignHeight="450" d:DesignWidth="300"
         d:DataContext="{d:DesignInstance {x:Type sourceControl:BranchesViewViewModel}, IsDesignTimeCreatable=False}">
    <TabItem.Resources>
        <BitmapImage x:Key="NewBranchImage" UriSource="../../Resources/arrow-branch-090.png" />
        <BitmapImage x:Key="MergeBranchImage" UriSource="../../Resources/arrow-merge-090.png" />
        <BitmapImage x:Key="DeleteBranchImage" UriSource="../../Resources/cross-script.png" />
        <BitmapImage x:Key="ErrorImage" UriSource="../../Resources/cross-circle.png" />
        <BitmapImage x:Key="MergeArrowImage" UriSource="../../Resources/arrow.png" />

        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <LinearGradientBrush x:Key="Item.SelectedInactive.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="LightGray"/>
        <LinearGradientBrush x:Key="Item.SelectedActive.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#ADC6E5"/>
        <Style x:Key="PrettyListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Height" Value="26" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderThickness" Value="1.5" />
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderThickness" Value="1.5" />
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </TabItem.Resources>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="5">
                <DockPanel Margin="10">
                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_CurrentBranchLabel}" />
                    <ComboBox ItemsSource="{Binding LocalBranches}"
                              SelectedItem="{Binding CurrentBranch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              VerticalContentAlignment="Center" />
                </DockPanel>

                <WrapPanel Orientation="Horizontal"
                           Margin="5,-5,0,5"
                           Grid.IsSharedSizeScope="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Buttons" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="6"
                                Height="25"
                                Command="{Binding NewBranchCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource NewBranchImage}"
                                       Margin="5,0"
                                       Width="16" />
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_NewBranch}"
                                           Margin="0,0,5,0"
                                           VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Buttons" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="6"
                                Height="25"
                                Command="{Binding MergeBranchCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource MergeBranchImage}"
                                       Margin="5"
                                       Width="16" />
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_MergeBranch}"
                                           Margin="0,0,5,0"
                                           VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="Buttons" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="6"
                                Height="25"
                                Command="{Binding DeleteBranchCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource DeleteBranchImage}"
                                       Margin="5,0"
                                       Width="16" />
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_DeleteBranch}"
                                           Margin="0,0,5,0"
                                           VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Grid>
                </WrapPanel>

                <Grid Visibility="{Binding DisplayCreateBranchGrid, Converter={StaticResource BoolToVisibility}}">
                    <StackPanel VerticalAlignment="Top"
                                Margin="10,5">
                        <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_BranchName}"
                                   FontWeight="SemiBold"
                                   Margin="0,0,0,5" />
                        <TextBox Text="{Binding NewBranchName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="0,0,0,10"
                                 Height="18"
                                 VerticalContentAlignment="Center" />
                        <Image Source="{StaticResource ErrorImage}"
                               HorizontalAlignment="Right"
                               Margin="0,-57,-7.8,0"
                               Width="16"
                               Visibility="{Binding IsNotValidBranchName, Converter={StaticResource BoolToVisibility}}" />

                        <Grid Grid.IsSharedSizeScope="True"
                              HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="CreateBranchButtons" />
                                <ColumnDefinition SharedSizeGroup="CreateBranchButtons" />
                            </Grid.ColumnDefinitions>
                            <Button Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=OK}"
                                    Padding="5"
                                    Command="{Binding CreateBranchOkButtonCommand}">
                            </Button>
                            <Button Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CancelButtonText}"
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    Padding="5"
                                    Command="{Binding CreateBranchCancelButtonCommand}">
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>

                <Grid Visibility="{Binding DisplayMergeBranchesGrid, Converter={StaticResource BoolToVisibility}}">
                    <StackPanel VerticalAlignment="Top"
                                Margin="10,5">
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_SourceLabel}"
                                           FontWeight="SemiBold"
                                           Margin="0,0,0,5" />
                                <ComboBox ItemsSource="{Binding LocalBranches}"
                                          SelectedItem="{Binding SourceBranch, Mode=TwoWay}" />
                            </StackPanel>
                            <Image Source="{StaticResource MergeArrowImage}"
                                   Width="45"
                                   Height="25"
                                   Grid.Column="1"
                                   VerticalAlignment="Bottom" />
                            <StackPanel Grid.Column="2">
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_DestinationLabel}"
                                           FontWeight="SemiBold"
                                           Margin="0,0,0,5" />
                                <ComboBox ItemsSource="{Binding LocalBranches}"
                                          SelectedItem="{Binding DestinationBranch, Mode=TwoWay}" />
                            </StackPanel>
                        </Grid>

                        <Grid Grid.IsSharedSizeScope="True"
                              HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="MergeBranchButtons" />
                                <ColumnDefinition SharedSizeGroup="MergeBranchButtons" />
                            </Grid.ColumnDefinitions>
                            <Button Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=OK}"
                                    Padding="5"
                                    Command="{Binding MergeBranchesOkButtonCommand}">
                            </Button>
                            <Button Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CancelButtonText}"
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    Padding="5"
                                    Command="{Binding MergeBranchesCancelButtonCommand}">
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>

                <Grid Visibility="{Binding DisplayDeleteBranchGrid, Converter={StaticResource BoolToVisibility}}">
                    <StackPanel VerticalAlignment="Top"
                                Margin="10,5">
                        <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_DeleteBranchTitleLable}"
                                   FontWeight="SemiBold"
                                   Margin="0,0,0,5" />
                        <ComboBox ItemsSource="{Binding LocalBranches}"
                                  SelectedItem="{Binding BranchToDelete, Mode=TwoWay}"
                                  Margin="0,0,0,10"/>

                        <Grid Grid.IsSharedSizeScope="True"
                              HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="DeleteBranchButtons" />
                                <ColumnDefinition SharedSizeGroup="DeleteBranchButtons" />
                            </Grid.ColumnDefinitions>
                            <Button Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=OK}"
                                    Padding="5"
                                    Command="{Binding DeleteBranchOkButtonCommand}">
                            </Button>
                            <Button Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CancelButtonText}"
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    Padding="5"
                                    Command="{Binding DeleteBranchCancelButtonCommand}">
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>

                <GroupBox Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_PublishedBranchesLabel}"
                          Height="175"
                          Margin="0,0,0,10"
                          Padding="5">
                    <ListBox ItemsSource="{Binding PublishedBranches}"
                             ItemContainerStyle="{StaticResource PrettyListBoxItem}" />
                </GroupBox>
                <GroupBox Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_UnpublishedBranchesLabel}"
                          Height="175"
                          Padding="5">
                    <ListBox ItemsSource="{Binding UnpublishedBranches}"
                             ItemContainerStyle="{StaticResource PrettyListBoxItem}" />
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</TabItem>
